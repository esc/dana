.. -*- coding: utf-8 -*-
.. include:: header.txt


Distributed Asynchronous Numerical Adaptive computing library
-------------------------------------------------------------------------------

Computational neuroscience  is a  vast domain of  research going down  from the
very  precise modeling  of a  single spiking  neuron, taking  into  account ion
channels and/or  dendrites spatial  geometry up to  the modeling of  very large
assemblies  of simplified  neurons that  are able  to give  account  of complex
cognitive functions.  DANA attempts to address this latter modeling activity by
offering a python  computing framework for the design  of very large assemblies
of neurons  using numerical and  distributed computations. However,  there does
not exist something as a unified model of neuron: if the formal neuron has been
established  some sixty years  ago, there  exists today  a myriad  of different
neuron models  that can be used within  an architecture. Some of  them are very
close  to the  original  definition while  some  others tend  to  refine it  by
providing extra  parameters or  variables to  the model in  order to  take into
account the great variability of biological neurons. DANA makes the assumptions
that a neuron is essentially a set  of numerical values that can vary over time
due to the influence of other neurons and learning and DANA aims at providing a
constrained  python framework  that guarantee  this definition  to  be enforced
anywhere in the model, i.e., no  symbol, no homonculus or central executive and
no *hacks* allowed.

The computational paradigm  supporting the framework is grounded  on the notion
of a group of units that is essentially a set of arbitrary values that can vary
along time under the influence of other groups and learning.  Each group can be
linked  to any  other group  (including itself)  using a  weighted  link.  DANA
framework  offers  a  set  of  core  objects needed  to  design  and  run  such
networks. However, what is actually computed  by a group and what is learned is
the responsibility of  the modeler who is in charge  of describing the equation
governing the behavior of the groups over time.

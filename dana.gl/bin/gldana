#!/usr/bin/env python

#------------------------------------------------------------------------------
#
#   Copyright (c) 2007 Nicolas Rougier
# 
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#------------------------------------------------------------------------------

""" Dana OpenGL

Dana Opengl is a front end for dana with OpenGL visualization capabilities.
Several backends may be used since the terminal itself only depends on OpenGL
primitives and extensions (like the framebuffer object extension).
"""


if __name__ == '__main__':
    import sys
    from dana.gl.window import window
    from optparse import OptionParser

    parser = OptionParser()
    parser.add_option ('-g', '--gtk', action='store_true', dest='gtk',
                       default=False, help='GTK backend')
    parser.add_option ('-w', '--wx', action='store_true', dest='wx',
                       default=False, help='WX backend')
    parser.add_option ('-s', '--sdl', action='store_true', dest='sdl',
                       default=False, help='SDL backend')
    parser.add_option ('', '--size', action='store', dest='size',
                       default="650x400", help="Window size (WxH)")
    parser.add_option ('-l', '--layout', action='store', dest='layout',
                       default='1', help="Window layout")
                       
    (options, args) = parser.parse_args()
    s = options.size.split('x')
    w = int(s[0])
    h = int(s[1])
    if options.gtk:   backend = 'gtk'
    elif options.wx:  backend = 'wx'
    elif options.sdl: backend = 'sdl'
    else:             backend = 'wx'

    win = window (namespace={}, title="GLDana", w=w, h=h, fps=30,
                  backend=backend, layout=options.layout)
    win.external_event_loop = True
    if (len(args)):
        win.open (args[0])
    win.external_event_loop = False
    win.show()
    terminal = win.terminal
    if terminal:
        terminal.history.save (terminal.history_filename)
